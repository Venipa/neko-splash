{"version":3,"sources":["components/neko-page/neko-display-image.tsx","api.ts","components/settings-dialog/settings-dialog.tsx","components/neko-page/neko-page.tsx","models/neko-settings.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["NekoDisplayImage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","neko","currentNeko","react","Box","display","flex","flexDirection","alignContent","justifyContent","className","isLoading","alignItems","CircularProgress","color","Container","maxWidth","style","position","src","url","alt","onLoad","ev","React","defaultClient","RxHR","defaults","baseUrl","json","api","instance","download","nekoApi","get","baka","nsfw_neko_gif","kiss","meow","fox","getImageMds","_getImageMds","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","__webpack_require__","e","then","t","bind","t0","x","apiBase","path","concat","name","abrupt","sent","default","map","stop","apply","arguments","SettingsDialog","state","settings","getValue","onClose","_this2","settings$","subscribe","setState","st","s","assign","_this3","_this$props","other","objectWithoutProperties","react_default","createElement","Dialog","fullWidth","aria-labelledby","DialogTitle","id","List","ListItem","button","onClick","saveSettings","darkMode","ListItemText","primary","ListItemIcon","Switch","edge","checked","inputProps","nsfwEnabled","Component","NekoPage","client","onRefresh","Subject","onRefresh$","asObservable","pipe","debounceTime","currentRoute","BehaviorSubject","currentRoute$","filter","distinctUntilChanged","tap","currentNekoRoute","unmount","nekoLoading","loadedNekoModules","complete","rts","defaultNeko","find","sort","l","r","isNsfw","sub","closed","unsubscribe","combineLatest","startWith","switchMap","_ref","_ref2","slicedToArray","baseUri","body","takeUntil","_this$state","settingsDialogOpen","settings_dialog_SettingsDialog","open","AppBar","elevation","padding","Toolbar","SdCardRounded_default","marginRight","Typography","variant","config","IconButton","_callee2","_context2","RefreshRounded_default","target","href","disabled","substring","lastIndexOf","PublishRounded_default","transform","minHeight","Select","value","onChange","_ref4","_callee3","prop","_context3","_x","MenuItem","borderLeftColor","borderLeftStyle","borderLeftWidth","key","displayName","marginLeft","SettingsRounded_default","width","undefined","justifySelf","neko_display_image_NekoDisplayImage","_callee4","_context4","objectSpread","marginTop","verticalAlign","height","viewBox","version","xmlns","d","fill","DefaultNekoSettings","localSettings","localStorage","getItem","JSON","parse","setItem","stringify","theme","createMuiTheme","palette","type","100","200","300","400","500","600","700","800","900","contrastText","secondary","main","light_theme","App","document","querySelector","classList","add","remove","ThemeProvider","react_router_dom","ref","react_router","component","neko_page_NekoPage","Boolean","window","location","hostname","match","__webpack_exports__","src_App_1","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.994d0453.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { INekoImage } from '../../models/neko-image';\r\nimport './neko-display-image.scss';\r\nimport { CircularProgress, Box, Container } from '@material-ui/core';\r\n\r\nexport interface INekoDisplayImageProps {\r\n  currentNeko: INekoImage;\r\n  onLoad?: () => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport default class NekoDisplayImage extends React.Component<\r\n  INekoDisplayImageProps\r\n> {\r\n  constructor(props: INekoDisplayImageProps) {\r\n    super(props);\r\n  }\r\n  public render() {\r\n    const neko = this.props.currentNeko;\r\n    return (\r\n      <Box display=\"flex\" flex=\"1\" flexDirection=\"column\" alignContent=\"center\" justifyContent=\"center\" className=\"neko-display-container\">\r\n        {this.props.isLoading && (\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"neko-display-loading\">\r\n            <CircularProgress color=\"secondary\" />\r\n          </Box>\r\n        )}\r\n        <Container maxWidth=\"md\" style={{position: 'relative'}}>\r\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n        <img\r\n          src={neko.url}\r\n          className=\"neko-display-image\"\r\n          alt=\"Cool Neko Image\"\r\n          onLoad={ev => this.props.onLoad && this.props.onLoad()}\r\n        />\r\n        </Box>\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","import { RxHR } from '@akanass/rx-http-request';\r\nimport { INekoImage, INekoRoute, NekoImageMd } from './models/neko-image';\r\nconst baseAPIUrl = 'https://nekos.life/api/v2';\r\n\r\nconst defaultClient = RxHR.defaults({\r\n  baseUrl: baseAPIUrl,\r\n  json: true\r\n});\r\n\r\nexport default {\r\n  instance: () => {\r\n    return defaultClient;\r\n  },\r\n  download: () => {\r\n    return RxHR.defaults({});\r\n  },\r\n  nekoApi: {\r\n    neko: () => defaultClient.get<INekoImage>('img/neko'),\r\n    baka: () => defaultClient.get<INekoImage>('img/baka'),\r\n    nsfw_neko_gif: () => defaultClient.get<INekoImage>('img/nsfw_neko_gif'),\r\n    kiss: () => defaultClient.get<INekoImage>('img/kiss'),\r\n    meow: () => defaultClient.get<INekoImage>('img/meow'),\r\n    fox: () => defaultClient.get<INekoImage>('img/fox_girl')\r\n  },\r\n  getImageMds: async (): Promise<NekoImageMd[]> => (await import(\"./neko/images.env.json\")).default.map((x: any) => {\r\n    if (!x.apiBase) {\r\n      x.apiBase = baseAPIUrl;\r\n    }\r\n    if (!x.path) {\r\n      x.path = `img/${x.name}`;\r\n    }\r\n    return x;\r\n  })\r\n};\r\n","import React, { Component } from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Switch,\r\n  ListItemIcon\r\n} from '@material-ui/core';\r\nimport { NekoSettings } from '../../models/neko-settings';\r\nimport { settings, settings$ } from '../../App';\r\n\r\nexport interface SettingsDialogProps {\r\n  open: boolean;\r\n  onClose: (value: NekoSettings) => void;\r\n}\r\n\r\nexport default class SettingsDialog extends Component<\r\n  SettingsDialogProps,\r\n  NekoSettings\r\n> {\r\n  constructor(props: SettingsDialogProps) {\r\n    super(props);\r\n    this.state = settings.getValue();\r\n  }\r\n\r\n  handleClose(props: SettingsDialogProps) {\r\n    if (props && props.onClose) {\r\n        props.onClose(this.state);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    settings$.subscribe(x => this.setState(x));\r\n  }\r\n  saveSettings(st: Partial<NekoSettings>) {\r\n    const s = Object.assign(this.state, st);\r\n    settings.next(s);\r\n  }\r\n  render() {\r\n    const { onClose, ...other } = this.props;\r\n    return (\r\n      <Dialog\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        onClose={() => {\r\n            if (onClose) {\r\n                onClose(this.state);\r\n            }\r\n        }}\r\n        aria-labelledby=\"dialog-title\"\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"dialog-title\">Settings</DialogTitle>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={() =>\r\n              this.saveSettings({\r\n                darkMode: !this.state.darkMode\r\n              })\r\n            }\r\n          >\r\n            <ListItemText id=\"dm-toggle\" primary=\"Dark Mode\" />\r\n            <ListItemIcon>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={this.state && this.state.darkMode}\r\n                inputProps={{ 'aria-labelledby': 'dm-toggle' }}\r\n              />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={() =>\r\n              this.saveSettings({\r\n                nsfwEnabled: !this.state.nsfwEnabled\r\n              })\r\n            }\r\n          >\r\n            <ListItemText id=\"nsfw-toggle\" primary=\"Enable NSFW\" />\r\n            <ListItemIcon>\r\n              <Switch\r\n                edge=\"end\"\r\n                checked={this.state && this.state.nsfwEnabled}\r\n                inputProps={{ 'aria-labelledby': 'nsfw-toggle' }}\r\n              />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  AppBar,\r\n  Container,\r\n  Toolbar,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  Badge,\r\n  Switch,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport { config } from '../..';\r\nimport NekoDisplayImage, { INekoDisplayImageProps } from './neko-display-image';\r\nimport NekoIcon from '@material-ui/icons/SdCardRounded';\r\nimport RefreshIcon from '@material-ui/icons/RefreshRounded';\r\nimport DownloadIcon from '@material-ui/icons/PublishRounded';\r\nimport SettingsIcon from '@material-ui/icons/SettingsRounded';\r\nimport GitHubIcon from './../../github-icon.svg';\r\nimport api from '../../api';\r\nimport { RxHttpRequest } from '@akanass/rx-http-request';\r\nimport { Subject, combineLatest, BehaviorSubject, Subscription } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  switchMap,\r\n  startWith,\r\n  finalize,\r\n  distinctUntilChanged,\r\n  tap,\r\n  filter,\r\n  takeUntil\r\n} from 'rxjs/operators';\r\nimport { INekoImage, INekoRoute, NekoImageMd } from '../../models/neko-image';\r\nimport './neko-page.scss';\r\nimport { NekRoutes } from '../../api-routes';\r\nimport SettingsDialog from '../settings-dialog/settings-dialog';\r\nimport { settings$, settings, theme } from '../../App';\r\nimport { NekoSettings } from '../../models/neko-settings';\r\n\r\nexport interface INekoPageProps {}\r\nexport interface INekoPageState {\r\n  currentNeko?: INekoImage;\r\n  nekoLoading: boolean;\r\n  downloading?: boolean;\r\n  currentNekoRoute?: NekoImageMd;\r\n  loadedNekoModules: NekoImageMd[];\r\n  settings: NekoSettings;\r\n  settingsDialogOpen?: boolean;\r\n}\r\nexport default class NekoPage extends React.Component<\r\n  INekoPageProps,\r\n  INekoPageState\r\n> {\r\n  private client: RxHttpRequest;\r\n  constructor(props: INekoPageProps) {\r\n    super(props);\r\n    this.state = {\r\n      nekoLoading: true,\r\n      settings: settings.getValue(),\r\n      loadedNekoModules: []\r\n    };\r\n    this.client = api.instance();\r\n  }\r\n  private onRefresh = new Subject<void>();\r\n  private onRefresh$ = this.onRefresh.asObservable().pipe(debounceTime(500));\r\n  private currentRoute = new BehaviorSubject<NekoImageMd>(null as any);\r\n  private currentRoute$ = this.currentRoute.asObservable().pipe(\r\n    filter(x => !!x),\r\n    distinctUntilChanged(),\r\n    tap(x => {\r\n      this.setState({\r\n        currentNekoRoute: x\r\n      });\r\n    })\r\n  );\r\n  private unmount = new Subject<void>();\r\n  componentWillUnmount() {\r\n    this.unmount.next();\r\n    this.unmount.complete();\r\n  }\r\n  async componentDidMount() {\r\n    let sub: Subscription;\r\n    const rts = await api.getImageMds();\r\n    const defaultNeko = rts.find(x => x.name === 'neko')!;\r\n    this.setState(\r\n      {\r\n        loadedNekoModules: rts.sort((l, r) => (l.isNsfw ? 1 : -1)),\r\n        currentNekoRoute: defaultNeko\r\n      },\r\n      () => {\r\n        if (sub && !sub.closed) {\r\n          sub.unsubscribe();\r\n        }\r\n        sub = combineLatest(\r\n          this.onRefresh$.pipe(startWith(void 0)),\r\n          this.currentRoute$.pipe(startWith(defaultNeko))\r\n        )\r\n          .pipe(\r\n            switchMap(([l, r]) => {\r\n              const path = r.path!;\r\n              const baseUri = r.apiBase!;\r\n              const apiInstance = api.instance();\r\n              return apiInstance.get(path, {\r\n                baseUrl: baseUri\r\n              });\r\n            })\r\n          )\r\n          .subscribe(x => {\r\n            this.setState({\r\n              currentNeko: x.body\r\n            });\r\n          });\r\n      }\r\n    );\r\n    settings$.pipe(takeUntil(this.unmount)).subscribe(x => {\r\n      this.setState({\r\n        settings: x\r\n      });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      currentNeko,\r\n      currentNekoRoute,\r\n      loadedNekoModules,\r\n      settings,\r\n      settingsDialogOpen\r\n    } = this.state;\r\n    return (\r\n      <Box flexDirection=\"column\" display=\"flex\">\r\n        <SettingsDialog\r\n          open={!!settingsDialogOpen}\r\n          onClose={s => this.setState({ settingsDialogOpen: false })}\r\n        />\r\n        <AppBar\r\n          position=\"static\"\r\n          color=\"primary\"\r\n          elevation={0}\r\n          style={{ padding: '0' }}\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Toolbar>\r\n              <Box\r\n                display=\"flex\"\r\n                flex=\"1\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\"\r\n              >\r\n                <NekoIcon style={{ marginRight: 12 }} />\r\n                <Typography variant=\"h6\">{config.name}</Typography>\r\n                <Box flex=\"1\" />\r\n                <IconButton\r\n                  style={{ marginRight: 8 }}\r\n                  onClick={async () => {\r\n                    this.setState(\r\n                      {\r\n                        nekoLoading: true\r\n                      },\r\n                      () => this.onRefresh.next()\r\n                    );\r\n                  }}\r\n                >\r\n                  <RefreshIcon />\r\n                </IconButton>\r\n                {currentNeko && (\r\n                  <IconButton\r\n                    target=\"_blank\"\r\n                    href={currentNeko ? currentNeko.url : '#'}\r\n                    disabled={!currentNeko}\r\n                    download={\r\n                      currentNeko\r\n                        ? currentNeko.url.substring(\r\n                            currentNeko.url.lastIndexOf('/') + 1\r\n                          )\r\n                        : '#'\r\n                    }\r\n                    onClick={() => {}}\r\n                  >\r\n                    <DownloadIcon style={{ transform: 'rotate(180deg)' }} />\r\n                  </IconButton>\r\n                )}\r\n              </Box>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n        <AppBar\r\n          position=\"static\"\r\n          color=\"primary\"\r\n          className=\"sub-bar\"\r\n          elevation={4}\r\n        >\r\n          <div\r\n            className={\r\n              'sub-bar-bg' + (!settings.darkMode ? ' sub-bar-bg-dark' : '')\r\n            }\r\n            style={{ padding: '0' }}\r\n          >\r\n            <Container maxWidth=\"md\">\r\n              <Toolbar style={{ minHeight: 32 }}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flex=\"1\"\r\n                  flexDirection=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Box flex=\"1\" />\r\n                  {currentNekoRoute && (\r\n                    <Select\r\n                      className=\"app-sub-select\"\r\n                      color=\"secondary\"\r\n                      value={currentNekoRoute.name}\r\n                      onChange={async prop => {\r\n                        const r = loadedNekoModules.find(\r\n                          x => x.name === prop.target.value\r\n                        );\r\n                        if (r) {\r\n                          this.currentRoute.next(r);\r\n                          this.setState(\r\n                            {\r\n                              nekoLoading: true\r\n                            },\r\n                            () => {\r\n                              this.currentRoute.next(r);\r\n                            }\r\n                          );\r\n                        }\r\n                      }}\r\n                    >\r\n                      {loadedNekoModules\r\n                        .filter(x => (x.isNsfw ? settings.nsfwEnabled : true))\r\n                        .map(x => (\r\n                          <MenuItem\r\n                            style={{\r\n                              borderLeftColor: '#cc0000',\r\n                              borderLeftStyle: 'solid',\r\n                              borderLeftWidth: x.isNsfw ? 4 : 0\r\n                            }}\r\n                            key={x.name}\r\n                            disabled={currentNekoRoute.name === x.name}\r\n                            value={x.name}\r\n                          >\r\n                            {x.displayName}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  )}\r\n                  <IconButton\r\n                    style={{ marginLeft: 8 }}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        settingsDialogOpen: true\r\n                      })\r\n                    }\r\n                  >\r\n                    <SettingsIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              </Toolbar>\r\n            </Container>\r\n          </div>\r\n        </AppBar>\r\n        <Container\r\n          style={{ width: '100%', position: 'relative' }}\r\n          maxWidth={undefined}\r\n        >\r\n          <Box display=\"flex\" flex=\"1\" justifySelf=\"stretch\">\r\n            {currentNeko && currentNeko.url && (\r\n              <NekoDisplayImage\r\n                isLoading={this.state.nekoLoading}\r\n                onLoad={async () =>\r\n                  this.setState({\r\n                    nekoLoading: false\r\n                  })\r\n                }\r\n                currentNeko={currentNeko}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Container>\r\n        <Box\r\n          display=\"flex\"\r\n          style={{\r\n            ...{ marginTop: 50 }\r\n          }}\r\n          flexDirection=\"column\"\r\n          alignContent=\"center\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <div>venipa.net &copy; Neko Splash, Some rights reserved</div>\r\n          <div>\r\n            <small>nekos.life &copy; GPLv3 rights reserved upon API</small>\r\n            <IconButton href=\"https://github.com/Nekos-life\" target=\"_blank\">\r\n              <svg\r\n                style={{ verticalAlign: 'middle' }}\r\n                height=\"16px\"\r\n                width=\"16px\"\r\n                viewBox=\"0 0 256 250\"\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <g>\r\n                  <path\r\n                    d=\"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\"\r\n                    fill=\"#161614\"\r\n                  />\r\n                </g>\r\n              </svg>\r\n            </IconButton>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n","export interface NekoSettings {\r\n  nsfwEnabled: boolean;\r\n  darkMode: boolean;\r\n}\r\nexport const DefaultNekoSettings: NekoSettings = {\r\n    nsfwEnabled: false,\r\n    darkMode: true\r\n};\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport NekoPage from './components/neko-page/neko-page';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { NekoSettings, DefaultNekoSettings } from './models/neko-settings';\nimport { distinctUntilChanged, takeUntil, tap } from 'rxjs/operators';\n\nconst localSettings = localStorage.getItem('settings');\nexport const settings = new BehaviorSubject<NekoSettings>(\n  localSettings && JSON.parse(localSettings)\n    ? Object.assign(DefaultNekoSettings, JSON.parse(localSettings))\n    : DefaultNekoSettings\n);\nexport const settings$ = settings.asObservable().pipe(\n  distinctUntilChanged(),\n  tap(s => {\n    localStorage.setItem('settings', JSON.stringify(s));\n  })\n);\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      '100': '#111',\n      '200': '#111',\n      '300': '#111',\n      '400': '#111',\n      '500': '#111',\n      '600': '#111',\n      '700': '#111',\n      '800': '#111',\n      '900': '#111',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#7289DA'\n    }\n  }\n});\nexport const light_theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      '100': '#fff',\n      '200': '#fff',\n      '300': '#fff',\n      '400': '#fff',\n      '500': '#fff',\n      '600': '#fff',\n      '700': '#fff',\n      '800': '#fff',\n      '900': '#fff',\n      contrastText: '#111'\n    },\n    secondary: {\n      main: '#7289DA'\n    }\n  }\n});\nexport interface AppProps {\n  settings: NekoSettings;\n}\n\nclass App extends Component<any, AppProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      settings: settings.getValue()\n    };\n  }\n  private unmount = new Subject<void>();\n  componentWillUnmount() {\n    this.unmount.next();\n    this.unmount.complete();\n  }\n  componentDidMount() {\n    settings\n      .pipe(\n        distinctUntilChanged((l, r) => l.darkMode === r.darkMode),\n        takeUntil(this.unmount)\n      )\n      .subscribe(x => {\n        this.setState({\n          settings: x\n        });\n        if (x.darkMode) {\n          document.querySelector('body')!.classList.add('dark');\n        } else {\n          document.querySelector('body')!.classList.remove('dark');\n        }\n      });\n  }\n  render() {\n    return (\n      <ThemeProvider theme={this.state.settings.darkMode ? theme : light_theme}>\n        <Router ref=\"router\">\n          <Switch>\n            <Route path=\"/\" component={() => <NekoPage />} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from \"./App.json\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport { config };"],"sourceRoot":""}